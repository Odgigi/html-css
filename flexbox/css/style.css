* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* body {
    background-color: aquamarine;
} */

.flexbox {
    background-color: rgb(63, 119, 230);
    min-height: 400px;
    /* Dès que je mets un display flex sur un parent cela lui donne le pouvoir de choisir la direction de l'axe principal de ses enfants directs */
    display: flex; 
    /* Pourquoi ? Parce que par défaut la valeur de flex-direction est sur row, mais je peux l'inverser et la remettre sur column */
    /* flex-direction: column|row;
    /* Justify-content permet de gérer l'espacement dans l'axe principal */
    /* Valeurs possibles: flex-start | center | flex-end | space-between | space-around */
    justify-content: center;
    /* La propriété { align-items } permet d'aligner sur l'axe secondaire */
    /* Valeurs possibles: flex-start | center | flex-end | stretch */
    align-items: stretch;
    gap: 20px;
    /* La proppriété { flex-wrap: wrap } fait aller à la ligne les éléments enfants s'ils n'ont plus de place (pour le responsive) */
    flex-wrap: wrap;
    /* Par défaut: nowrap */
}
.flexbox p {
    background-color: pink;
    width: 250px;
    min-height: 150px;
    border: 1px solid #999;
}
